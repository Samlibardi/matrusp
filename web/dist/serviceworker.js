!function(e){var t={};function r(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(n,s,function(t){return e[t]}.bind(null,s));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=195)}({195:function(e,t){var r="Matrusp";self.recentFetches=[],self.CURDirs=["/","/matrusp.webmanifest","/js/.+","/styles/.+","/images/.+"].map(e=>new RegExp(`^${self.location.origin}.+${e}$`)),self.NCDirs=["/data/.+"].map(e=>new RegExp(`^${self.location.origin}.+${e}$`)),self.addEventListener("install",e=>{self.skipWaiting()}),self.addEventListener("fetch",e=>{self.CURDirs.some(t=>t.test(e.request.url))?e.respondWith(function(e){return self.caches.open(r).then(t=>t.match(e).then(n=>{if(!n){var s=fetch(e);return s.then(async n=>{n=n.clone(),(t=await self.caches.open(r)).put(e,n)}),s}var o=fetch(e.url,{method:"GET",headers:{"If-None-Match":n.headers.get("ETag").replace("-gzip","")}}).then(async n=>{n.ok&&((t=await self.caches.open(r)).put(e,n),function(){self.refreshTimeout&&clearTimeout(self.refreshTimeout);self.refreshTimeout=setTimeout(()=>self.clients.matchAll().then(e=>{Promise.all(self.recentFetches).then(()=>{e.forEach(e=>{e.postMessage("refresh")})}),self.recentFetches=[]}),1e3)}())}).catch(e=>{});return self.recentFetches.push(o),n}))}(e.request.clone())):self.NCDirs.some(t=>t.test(e.request.url))?e.respondWith(async function(e){var t=await self.caches.open(r).then(t=>t.match(e));try{var n=await fetch(e.url,{method:"GET",headers:{"If-None-Match":t?t.headers.get("ETag").replace("-gzip",""):""}});return n.ok?(await self.caches.open(r).then(t=>t.put(e,n.clone())),n):t}catch(e){if(t)return t;throw e}}(e.request.clone())):e.respondWith(fetch(e.request.clone()))})}});