!function(e){var c={};function n(r){if(c[r])return c[r].exports;var l=c[r]={i:r,l:!1,exports:{}};return e[r].call(l.exports,l,l.exports,n),l.l=!0,l.exports}n.m=e,n.c=c,n.d=function(e,c,r){n.o(e,c)||Object.defineProperty(e,c,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,c){if(1&c&&(e=n(e)),8&c)return e;if(4&c&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&c&&"string"!=typeof e)for(var l in e)n.d(r,l,function(c){return e[c]}.bind(null,l));return r},n.n=function(e){var c=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(c,"a",c),c},n.o=function(e,c){return Object.prototype.hasOwnProperty.call(e,c)},n.p="",n(n.s=195)}({195:function(module,exports){eval("var CACHE_NAME = \"Matrusp\";\r\n\r\nself.recentFetches = [];\r\n\r\n//Lista de diretórios que obedecem o padrão Cache-Update-Refresh.\r\n//Endereços não presentes nessas listas serão buscados da rede sempre\r\nself.CURDirs = [\r\n  \"/\",\r\n  \"/matrusp.webmanifest\",\r\n  \"/js/.+\",\r\n  \"/styles/.+\",\r\n  \"/images/.+\"\r\n  ].map(dir => new RegExp(`^${self.location.origin}.+${dir}$`));\r\n\r\n//Lista de diretórios que seguem o modelo Network-Cache\r\nself.NCDirs = [\r\n  \"/data/.+\" //Identificadores baixados não mostrarão mensagem de atualização\r\n].map(dir => new RegExp(`^${self.location.origin}.+${dir}$`));\r\n\r\nself.addEventListener('install', e => {self.skipWaiting(); }) // Ativar o SW imediatamente\r\n\r\nself.addEventListener('fetch', e => {\r\n  // Responder a um fetch com uma resposta do cache(se o diretório estiver na lista)\r\n  if(self.CURDirs.some(dir => dir.test(e.request.url))) {\r\n    e.respondWith(cacheUpdateRefresh(e.request.clone())); //Envia mensagem de atualização ao cliente\r\n  }\r\n  else if(self.NCDirs.some(dir => dir.test(e.request.url))) {\r\n    e.respondWith(networkCache(e.request.clone())); //Não envia mensagem de atualização\r\n  }\r\n\r\n  // Senão, responder com um pedido para a rede\r\n  else e.respondWith(fetch(e.request.clone()));\r\n});\r\n\r\nfunction cacheUpdateRefresh(request) {\r\n  return self.caches.open(CACHE_NAME).then(cache => cache.match(request).then(response => {\r\n    if(!response) {\r\n      // Se o pedido não for encontrado em cache, retornar da network e colocar o resultado em cache\r\n      var fetchPromise = fetch(request);\r\n      fetchPromise.then(async newresponse => {\r\n        newresponse = newresponse.clone();\r\n        cache = await self.caches.open(CACHE_NAME);\r\n        cache.put(request,newresponse);\r\n      });\r\n      return fetchPromise;\r\n    }\r\n\r\n    // Se o pedido for encontrado em cache, fazer um pedido para a rede e colocar em cache, mas retornar a resposta do cache\r\n    //  antes que ele seja concluido. Enviar o ETag da resposta salva para evitar baixar conteúdo repetido.\r\n    var promise = fetch(request.url, {method: 'GET', headers: {'If-None-Match': (response.headers.get(\"ETag\")||'').replace('-gzip','')}}).then(async newresponse => {\r\n      if(newresponse.ok) {\r\n        cache = await self.caches.open(CACHE_NAME);\r\n        cache.put(request,newresponse);\r\n        sendRefreshMessage();\r\n      }\r\n    }).catch(e => {});\r\n    self.recentFetches.push(promise);\r\n    return response;\r\n  }));\r\n}\r\n\r\nfunction sendRefreshMessage() {\r\n  //Esperar 1s para enviar a mensagem ao cliente, para evitar que seja enviada antes de a UI estar carregada\r\n  //Verificar se após 1s ainda existe algum fetch pendente, e esperar\r\n  if(self.refreshTimeout) clearTimeout(self.refreshTimeout);\r\n  self.refreshTimeout = setTimeout(() => self.clients.matchAll().then(clients => {\r\n    Promise.all(self.recentFetches).then(() => {\r\n      clients.forEach(client => {\r\n        client.postMessage('refresh');\r\n      });\r\n    });\r\n    self.recentFetches = [];\r\n  }),1000);\r\n}\r\n\r\nasync function networkCache(request) {\r\n  var cacheResponse = await self.caches.open(CACHE_NAME).then(cache => cache.match(request));\r\n\r\n  //Tentar obter a resposta da rede, se não conseguir, retornar a do cache\r\n  try {\r\n    var netResponse = await fetch(request.url, {method: 'GET', headers: {'If-None-Match': cacheResponse ? cacheResponse.headers.get(\"ETag\").replace('-gzip','') : ''}});\r\n    if(netResponse.ok) {\r\n      await self.caches.open(CACHE_NAME).then(cache => cache.put(request,netResponse.clone()));\r\n      return netResponse;\r\n    }\r\n    else return cacheResponse;\r\n  }\r\n\r\n  //Caso ocorra algum erro, retornar a resposta do cache. Se não houver, propagar o erro\r\n  catch(e) {\r\n    if(cacheResponse)\r\n      return cacheResponse;\r\n    else throw e;\r\n  }\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk1LmpzIiwic291cmNlcyI6WyJmaWxlOi8vL0M6L1VzZXJzL3NhbWxpL3NvdXJjZS9yZXBvcy9tYXRydXNwL3dlYi9zcmMvc2VydmljZXdvcmtlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQ0FDSEVfTkFNRSA9IFwiTWF0cnVzcFwiO1xyXG5cclxuc2VsZi5yZWNlbnRGZXRjaGVzID0gW107XHJcblxyXG4vL0xpc3RhIGRlIGRpcmV0w7NyaW9zIHF1ZSBvYmVkZWNlbSBvIHBhZHLDo28gQ2FjaGUtVXBkYXRlLVJlZnJlc2guXHJcbi8vRW5kZXJlw6dvcyBuw6NvIHByZXNlbnRlcyBuZXNzYXMgbGlzdGFzIHNlcsOjbyBidXNjYWRvcyBkYSByZWRlIHNlbXByZVxyXG5zZWxmLkNVUkRpcnMgPSBbXHJcbiAgXCIvXCIsXHJcbiAgXCIvbWF0cnVzcC53ZWJtYW5pZmVzdFwiLFxyXG4gIFwiL2pzLy4rXCIsXHJcbiAgXCIvc3R5bGVzLy4rXCIsXHJcbiAgXCIvaW1hZ2VzLy4rXCJcclxuICBdLm1hcChkaXIgPT4gbmV3IFJlZ0V4cChgXiR7c2VsZi5sb2NhdGlvbi5vcmlnaW59Liske2Rpcn0kYCkpO1xyXG5cclxuLy9MaXN0YSBkZSBkaXJldMOzcmlvcyBxdWUgc2VndWVtIG8gbW9kZWxvIE5ldHdvcmstQ2FjaGVcclxuc2VsZi5OQ0RpcnMgPSBbXHJcbiAgXCIvZGF0YS8uK1wiIC8vSWRlbnRpZmljYWRvcmVzIGJhaXhhZG9zIG7Do28gbW9zdHJhcsOjbyBtZW5zYWdlbSBkZSBhdHVhbGl6YcOnw6NvXHJcbl0ubWFwKGRpciA9PiBuZXcgUmVnRXhwKGBeJHtzZWxmLmxvY2F0aW9uLm9yaWdpbn0uKyR7ZGlyfSRgKSk7XHJcblxyXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2luc3RhbGwnLCBlID0+IHtzZWxmLnNraXBXYWl0aW5nKCk7IH0pIC8vIEF0aXZhciBvIFNXIGltZWRpYXRhbWVudGVcclxuXHJcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignZmV0Y2gnLCBlID0+IHtcclxuICAvLyBSZXNwb25kZXIgYSB1bSBmZXRjaCBjb20gdW1hIHJlc3Bvc3RhIGRvIGNhY2hlKHNlIG8gZGlyZXTDs3JpbyBlc3RpdmVyIG5hIGxpc3RhKVxyXG4gIGlmKHNlbGYuQ1VSRGlycy5zb21lKGRpciA9PiBkaXIudGVzdChlLnJlcXVlc3QudXJsKSkpIHtcclxuICAgIGUucmVzcG9uZFdpdGgoY2FjaGVVcGRhdGVSZWZyZXNoKGUucmVxdWVzdC5jbG9uZSgpKSk7IC8vRW52aWEgbWVuc2FnZW0gZGUgYXR1YWxpemHDp8OjbyBhbyBjbGllbnRlXHJcbiAgfVxyXG4gIGVsc2UgaWYoc2VsZi5OQ0RpcnMuc29tZShkaXIgPT4gZGlyLnRlc3QoZS5yZXF1ZXN0LnVybCkpKSB7XHJcbiAgICBlLnJlc3BvbmRXaXRoKG5ldHdvcmtDYWNoZShlLnJlcXVlc3QuY2xvbmUoKSkpOyAvL07Do28gZW52aWEgbWVuc2FnZW0gZGUgYXR1YWxpemHDp8Ojb1xyXG4gIH1cclxuXHJcbiAgLy8gU2Vuw6NvLCByZXNwb25kZXIgY29tIHVtIHBlZGlkbyBwYXJhIGEgcmVkZVxyXG4gIGVsc2UgZS5yZXNwb25kV2l0aChmZXRjaChlLnJlcXVlc3QuY2xvbmUoKSkpO1xyXG59KTtcclxuXHJcbmZ1bmN0aW9uIGNhY2hlVXBkYXRlUmVmcmVzaChyZXF1ZXN0KSB7XHJcbiAgcmV0dXJuIHNlbGYuY2FjaGVzLm9wZW4oQ0FDSEVfTkFNRSkudGhlbihjYWNoZSA9PiBjYWNoZS5tYXRjaChyZXF1ZXN0KS50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgIGlmKCFyZXNwb25zZSkge1xyXG4gICAgICAvLyBTZSBvIHBlZGlkbyBuw6NvIGZvciBlbmNvbnRyYWRvIGVtIGNhY2hlLCByZXRvcm5hciBkYSBuZXR3b3JrIGUgY29sb2NhciBvIHJlc3VsdGFkbyBlbSBjYWNoZVxyXG4gICAgICB2YXIgZmV0Y2hQcm9taXNlID0gZmV0Y2gocmVxdWVzdCk7XHJcbiAgICAgIGZldGNoUHJvbWlzZS50aGVuKGFzeW5jIG5ld3Jlc3BvbnNlID0+IHtcclxuICAgICAgICBuZXdyZXNwb25zZSA9IG5ld3Jlc3BvbnNlLmNsb25lKCk7XHJcbiAgICAgICAgY2FjaGUgPSBhd2FpdCBzZWxmLmNhY2hlcy5vcGVuKENBQ0hFX05BTUUpO1xyXG4gICAgICAgIGNhY2hlLnB1dChyZXF1ZXN0LG5ld3Jlc3BvbnNlKTtcclxuICAgICAgfSk7XHJcbiAgICAgIHJldHVybiBmZXRjaFByb21pc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU2UgbyBwZWRpZG8gZm9yIGVuY29udHJhZG8gZW0gY2FjaGUsIGZhemVyIHVtIHBlZGlkbyBwYXJhIGEgcmVkZSBlIGNvbG9jYXIgZW0gY2FjaGUsIG1hcyByZXRvcm5hciBhIHJlc3Bvc3RhIGRvIGNhY2hlXHJcbiAgICAvLyAgYW50ZXMgcXVlIGVsZSBzZWphIGNvbmNsdWlkby4gRW52aWFyIG8gRVRhZyBkYSByZXNwb3N0YSBzYWx2YSBwYXJhIGV2aXRhciBiYWl4YXIgY29udGXDumRvIHJlcGV0aWRvLlxyXG4gICAgdmFyIHByb21pc2UgPSBmZXRjaChyZXF1ZXN0LnVybCwge21ldGhvZDogJ0dFVCcsIGhlYWRlcnM6IHsnSWYtTm9uZS1NYXRjaCc6IChyZXNwb25zZS5oZWFkZXJzLmdldChcIkVUYWdcIil8fCcnKS5yZXBsYWNlKCctZ3ppcCcsJycpfX0pLnRoZW4oYXN5bmMgbmV3cmVzcG9uc2UgPT4ge1xyXG4gICAgICBpZihuZXdyZXNwb25zZS5vaykge1xyXG4gICAgICAgIGNhY2hlID0gYXdhaXQgc2VsZi5jYWNoZXMub3BlbihDQUNIRV9OQU1FKTtcclxuICAgICAgICBjYWNoZS5wdXQocmVxdWVzdCxuZXdyZXNwb25zZSk7XHJcbiAgICAgICAgc2VuZFJlZnJlc2hNZXNzYWdlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pLmNhdGNoKGUgPT4ge30pO1xyXG4gICAgc2VsZi5yZWNlbnRGZXRjaGVzLnB1c2gocHJvbWlzZSk7XHJcbiAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgfSkpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZW5kUmVmcmVzaE1lc3NhZ2UoKSB7XHJcbiAgLy9Fc3BlcmFyIDFzIHBhcmEgZW52aWFyIGEgbWVuc2FnZW0gYW8gY2xpZW50ZSwgcGFyYSBldml0YXIgcXVlIHNlamEgZW52aWFkYSBhbnRlcyBkZSBhIFVJIGVzdGFyIGNhcnJlZ2FkYVxyXG4gIC8vVmVyaWZpY2FyIHNlIGFww7NzIDFzIGFpbmRhIGV4aXN0ZSBhbGd1bSBmZXRjaCBwZW5kZW50ZSwgZSBlc3BlcmFyXHJcbiAgaWYoc2VsZi5yZWZyZXNoVGltZW91dCkgY2xlYXJUaW1lb3V0KHNlbGYucmVmcmVzaFRpbWVvdXQpO1xyXG4gIHNlbGYucmVmcmVzaFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHNlbGYuY2xpZW50cy5tYXRjaEFsbCgpLnRoZW4oY2xpZW50cyA9PiB7XHJcbiAgICBQcm9taXNlLmFsbChzZWxmLnJlY2VudEZldGNoZXMpLnRoZW4oKCkgPT4ge1xyXG4gICAgICBjbGllbnRzLmZvckVhY2goY2xpZW50ID0+IHtcclxuICAgICAgICBjbGllbnQucG9zdE1lc3NhZ2UoJ3JlZnJlc2gnKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIHNlbGYucmVjZW50RmV0Y2hlcyA9IFtdO1xyXG4gIH0pLDEwMDApO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBuZXR3b3JrQ2FjaGUocmVxdWVzdCkge1xyXG4gIHZhciBjYWNoZVJlc3BvbnNlID0gYXdhaXQgc2VsZi5jYWNoZXMub3BlbihDQUNIRV9OQU1FKS50aGVuKGNhY2hlID0+IGNhY2hlLm1hdGNoKHJlcXVlc3QpKTtcclxuXHJcbiAgLy9UZW50YXIgb2J0ZXIgYSByZXNwb3N0YSBkYSByZWRlLCBzZSBuw6NvIGNvbnNlZ3VpciwgcmV0b3JuYXIgYSBkbyBjYWNoZVxyXG4gIHRyeSB7XHJcbiAgICB2YXIgbmV0UmVzcG9uc2UgPSBhd2FpdCBmZXRjaChyZXF1ZXN0LnVybCwge21ldGhvZDogJ0dFVCcsIGhlYWRlcnM6IHsnSWYtTm9uZS1NYXRjaCc6IGNhY2hlUmVzcG9uc2UgPyBjYWNoZVJlc3BvbnNlLmhlYWRlcnMuZ2V0KFwiRVRhZ1wiKS5yZXBsYWNlKCctZ3ppcCcsJycpIDogJyd9fSk7XHJcbiAgICBpZihuZXRSZXNwb25zZS5vaykge1xyXG4gICAgICBhd2FpdCBzZWxmLmNhY2hlcy5vcGVuKENBQ0hFX05BTUUpLnRoZW4oY2FjaGUgPT4gY2FjaGUucHV0KHJlcXVlc3QsbmV0UmVzcG9uc2UuY2xvbmUoKSkpO1xyXG4gICAgICByZXR1cm4gbmV0UmVzcG9uc2U7XHJcbiAgICB9XHJcbiAgICBlbHNlIHJldHVybiBjYWNoZVJlc3BvbnNlO1xyXG4gIH1cclxuXHJcbiAgLy9DYXNvIG9jb3JyYSBhbGd1bSBlcnJvLCByZXRvcm5hciBhIHJlc3Bvc3RhIGRvIGNhY2hlLiBTZSBuw6NvIGhvdXZlciwgcHJvcGFnYXIgbyBlcnJvXHJcbiAgY2F0Y2goZSkge1xyXG4gICAgaWYoY2FjaGVSZXNwb25zZSlcclxuICAgICAgcmV0dXJuIGNhY2hlUmVzcG9uc2U7XHJcbiAgICBlbHNlIHRocm93IGU7XHJcbiAgfVxyXG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///195\n")}});